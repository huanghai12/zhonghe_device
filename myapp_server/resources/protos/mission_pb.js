// source: mission.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.Yikun.Api.Mission.ConstAction', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.KnownPositionRequest', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.MissionFeedback', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.MissionIdentifier', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.MissionLogCommand', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.MissionLogFeedback', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.PositionRequest', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.RelativeMoveRequest', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.SetDORequest', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.SwitchMapRequest', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.URCommand', null, global);
goog.exportSymbol('proto.Yikun.Api.Mission.WaitDIRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.MissionFeedback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.MissionFeedback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.MissionFeedback.displayName = 'proto.Yikun.Api.Mission.MissionFeedback';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.KnownPositionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.KnownPositionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.KnownPositionRequest.displayName = 'proto.Yikun.Api.Mission.KnownPositionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.PositionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.PositionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.PositionRequest.displayName = 'proto.Yikun.Api.Mission.PositionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.RelativeMoveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.RelativeMoveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.RelativeMoveRequest.displayName = 'proto.Yikun.Api.Mission.RelativeMoveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.SwitchMapRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.SwitchMapRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.SwitchMapRequest.displayName = 'proto.Yikun.Api.Mission.SwitchMapRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.WaitDIRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.WaitDIRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.WaitDIRequest.displayName = 'proto.Yikun.Api.Mission.WaitDIRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.SetDORequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.SetDORequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.SetDORequest.displayName = 'proto.Yikun.Api.Mission.SetDORequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.URCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.URCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.URCommand.displayName = 'proto.Yikun.Api.Mission.URCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.MissionIdentifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.MissionIdentifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.MissionIdentifier.displayName = 'proto.Yikun.Api.Mission.MissionIdentifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.MissionLogCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.MissionLogCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.MissionLogCommand.displayName = 'proto.Yikun.Api.Mission.MissionLogCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Mission.MissionLogFeedback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Mission.MissionLogFeedback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Mission.MissionLogFeedback.displayName = 'proto.Yikun.Api.Mission.MissionLogFeedback';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.MissionFeedback.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.MissionFeedback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.MissionFeedback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.MissionFeedback.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.MissionFeedback}
 */
proto.Yikun.Api.Mission.MissionFeedback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.MissionFeedback;
  return proto.Yikun.Api.Mission.MissionFeedback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.MissionFeedback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.MissionFeedback}
 */
proto.Yikun.Api.Mission.MissionFeedback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.MissionFeedback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.MissionFeedback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.MissionFeedback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.MissionFeedback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string taskid = 1;
 * @return {string}
 */
proto.Yikun.Api.Mission.MissionFeedback.prototype.getTaskid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.MissionFeedback} returns this
 */
proto.Yikun.Api.Mission.MissionFeedback.prototype.setTaskid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 status = 2;
 * @return {number}
 */
proto.Yikun.Api.Mission.MissionFeedback.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.MissionFeedback} returns this
 */
proto.Yikun.Api.Mission.MissionFeedback.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.KnownPositionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.KnownPositionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.KnownPositionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),
    position: jspb.Message.getFieldWithDefault(msg, 2, 0),
    retries: jspb.Message.getFieldWithDefault(msg, 3, 0),
    threshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.KnownPositionRequest}
 */
proto.Yikun.Api.Mission.KnownPositionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.KnownPositionRequest;
  return proto.Yikun.Api.Mission.KnownPositionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.KnownPositionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.KnownPositionRequest}
 */
proto.Yikun.Api.Mission.KnownPositionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetries(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.KnownPositionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.KnownPositionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.KnownPositionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRetries();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getThreshold();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional int32 priority = 1;
 * @return {number}
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.KnownPositionRequest} returns this
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 position = 2;
 * @return {number}
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.KnownPositionRequest} returns this
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 retries = 3;
 * @return {number}
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.getRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.KnownPositionRequest} returns this
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.setRetries = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double threshold = 4;
 * @return {number}
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.getThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.KnownPositionRequest} returns this
 */
proto.Yikun.Api.Mission.KnownPositionRequest.prototype.setThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.PositionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.PositionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.PositionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    orientation: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    offsetX: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    offsetY: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    retries: jspb.Message.getFieldWithDefault(msg, 8, 0),
    threshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.PositionRequest}
 */
proto.Yikun.Api.Mission.PositionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.PositionRequest;
  return proto.Yikun.Api.Mission.PositionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.PositionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.PositionRequest}
 */
proto.Yikun.Api.Mission.PositionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientation(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffsetX(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffsetY(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetries(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.PositionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.PositionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.PositionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getOffsetX();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getOffsetY();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getRetries();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getThreshold();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
};


/**
 * optional int32 priority = 1;
 * @return {number}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.PositionRequest} returns this
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float x = 2;
 * @return {number}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.PositionRequest} returns this
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float y = 3;
 * @return {number}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.PositionRequest} returns this
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float orientation = 4;
 * @return {number}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.PositionRequest} returns this
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.setOrientation = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 type = 5;
 * @return {number}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.PositionRequest} returns this
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float offset_x = 6;
 * @return {number}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.getOffsetX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.PositionRequest} returns this
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.setOffsetX = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float offset_y = 7;
 * @return {number}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.getOffsetY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.PositionRequest} returns this
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.setOffsetY = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional int32 retries = 8;
 * @return {number}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.getRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.PositionRequest} returns this
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.setRetries = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional double threshold = 9;
 * @return {number}
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.getThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.PositionRequest} returns this
 */
proto.Yikun.Api.Mission.PositionRequest.prototype.setThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.RelativeMoveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.RelativeMoveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    orientation: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    maxlinearspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    maxangularspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    collisiondetection: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.RelativeMoveRequest}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.RelativeMoveRequest;
  return proto.Yikun.Api.Mission.RelativeMoveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.RelativeMoveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.RelativeMoveRequest}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientation(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxlinearspeed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxangularspeed(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCollisiondetection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.RelativeMoveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.RelativeMoveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getMaxlinearspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getMaxangularspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getCollisiondetection();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 priority = 1;
 * @return {number}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float x = 2;
 * @return {number}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float y = 3;
 * @return {number}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float orientation = 4;
 * @return {number}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.setOrientation = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float maxlinearspeed = 5;
 * @return {number}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.getMaxlinearspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.setMaxlinearspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float maxangularspeed = 6;
 * @return {number}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.getMaxangularspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.setMaxangularspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 collisiondetection = 7;
 * @return {number}
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.getCollisiondetection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Mission.RelativeMoveRequest.prototype.setCollisiondetection = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.SwitchMapRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.SwitchMapRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.SwitchMapRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),
    map: jspb.Message.getFieldWithDefault(msg, 2, ""),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    orientation: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.SwitchMapRequest}
 */
proto.Yikun.Api.Mission.SwitchMapRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.SwitchMapRequest;
  return proto.Yikun.Api.Mission.SwitchMapRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.SwitchMapRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.SwitchMapRequest}
 */
proto.Yikun.Api.Mission.SwitchMapRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMap(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.SwitchMapRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.SwitchMapRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.SwitchMapRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMap();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
};


/**
 * optional int32 priority = 1;
 * @return {number}
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.SwitchMapRequest} returns this
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string map = 2;
 * @return {string}
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.getMap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.SwitchMapRequest} returns this
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.setMap = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float x = 3;
 * @return {number}
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.SwitchMapRequest} returns this
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float y = 4;
 * @return {number}
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.SwitchMapRequest} returns this
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float orientation = 5;
 * @return {number}
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.SwitchMapRequest} returns this
 */
proto.Yikun.Api.Mission.SwitchMapRequest.prototype.setOrientation = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.WaitDIRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.WaitDIRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.WaitDIRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),
    device: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    value: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timeout: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.WaitDIRequest}
 */
proto.Yikun.Api.Mission.WaitDIRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.WaitDIRequest;
  return proto.Yikun.Api.Mission.WaitDIRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.WaitDIRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.WaitDIRequest}
 */
proto.Yikun.Api.Mission.WaitDIRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.WaitDIRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.WaitDIRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.WaitDIRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
};


/**
 * optional int32 priority = 1;
 * @return {number}
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.WaitDIRequest} returns this
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string device = 2;
 * @return {string}
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.WaitDIRequest} returns this
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.setDevice = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 port = 3;
 * @return {number}
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.WaitDIRequest} returns this
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 value = 4;
 * @return {number}
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.WaitDIRequest} returns this
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional float timeout = 5;
 * @return {number}
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.WaitDIRequest} returns this
 */
proto.Yikun.Api.Mission.WaitDIRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.SetDORequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.SetDORequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.SetDORequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),
    device: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    value: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.SetDORequest}
 */
proto.Yikun.Api.Mission.SetDORequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.SetDORequest;
  return proto.Yikun.Api.Mission.SetDORequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.SetDORequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.SetDORequest}
 */
proto.Yikun.Api.Mission.SetDORequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.SetDORequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.SetDORequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.SetDORequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 priority = 1;
 * @return {number}
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.SetDORequest} returns this
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string device = 2;
 * @return {string}
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.SetDORequest} returns this
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.setDevice = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 port = 3;
 * @return {number}
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.SetDORequest} returns this
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 value = 4;
 * @return {number}
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.SetDORequest} returns this
 */
proto.Yikun.Api.Mission.SetDORequest.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.URCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.URCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.URCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.URCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),
    device: jspb.Message.getFieldWithDefault(msg, 2, 0),
    command: jspb.Message.getFieldWithDefault(msg, 3, 0),
    value: jspb.Message.getFieldWithDefault(msg, 4, ""),
    duration: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.URCommand}
 */
proto.Yikun.Api.Mission.URCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.URCommand;
  return proto.Yikun.Api.Mission.URCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.URCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.URCommand}
 */
proto.Yikun.Api.Mission.URCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDevice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommand(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.URCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.URCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.URCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.URCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDevice();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCommand();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
};


/**
 * optional int32 priority = 1;
 * @return {number}
 */
proto.Yikun.Api.Mission.URCommand.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.URCommand} returns this
 */
proto.Yikun.Api.Mission.URCommand.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 device = 2;
 * @return {number}
 */
proto.Yikun.Api.Mission.URCommand.prototype.getDevice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.URCommand} returns this
 */
proto.Yikun.Api.Mission.URCommand.prototype.setDevice = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 command = 3;
 * @return {number}
 */
proto.Yikun.Api.Mission.URCommand.prototype.getCommand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.URCommand} returns this
 */
proto.Yikun.Api.Mission.URCommand.prototype.setCommand = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string value = 4;
 * @return {string}
 */
proto.Yikun.Api.Mission.URCommand.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.URCommand} returns this
 */
proto.Yikun.Api.Mission.URCommand.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional float duration = 5;
 * @return {number}
 */
proto.Yikun.Api.Mission.URCommand.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.URCommand} returns this
 */
proto.Yikun.Api.Mission.URCommand.prototype.setDuration = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.MissionIdentifier.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.MissionIdentifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.MissionIdentifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.MissionIdentifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.MissionIdentifier}
 */
proto.Yikun.Api.Mission.MissionIdentifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.MissionIdentifier;
  return proto.Yikun.Api.Mission.MissionIdentifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.MissionIdentifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.MissionIdentifier}
 */
proto.Yikun.Api.Mission.MissionIdentifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.MissionIdentifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.MissionIdentifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.MissionIdentifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.MissionIdentifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 priority = 1;
 * @return {number}
 */
proto.Yikun.Api.Mission.MissionIdentifier.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.MissionIdentifier} returns this
 */
proto.Yikun.Api.Mission.MissionIdentifier.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.Yikun.Api.Mission.MissionIdentifier.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.MissionIdentifier} returns this
 */
proto.Yikun.Api.Mission.MissionIdentifier.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.MissionLogCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.MissionLogCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.MissionLogCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.MissionLogCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    iterator: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.MissionLogCommand}
 */
proto.Yikun.Api.Mission.MissionLogCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.MissionLogCommand;
  return proto.Yikun.Api.Mission.MissionLogCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.MissionLogCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.MissionLogCommand}
 */
proto.Yikun.Api.Mission.MissionLogCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIterator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.MissionLogCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.MissionLogCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.MissionLogCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.MissionLogCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIterator();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string taskid = 1;
 * @return {string}
 */
proto.Yikun.Api.Mission.MissionLogCommand.prototype.getTaskid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.MissionLogCommand} returns this
 */
proto.Yikun.Api.Mission.MissionLogCommand.prototype.setTaskid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 iterator = 2;
 * @return {number}
 */
proto.Yikun.Api.Mission.MissionLogCommand.prototype.getIterator = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.MissionLogCommand} returns this
 */
proto.Yikun.Api.Mission.MissionLogCommand.prototype.setIterator = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Mission.MissionLogFeedback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Mission.MissionLogFeedback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.MissionLogFeedback.toObject = function(includeInstance, msg) {
  var f, obj = {
    iterator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    queueId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    level: jspb.Message.getFieldWithDefault(msg, 3, ""),
    info: jspb.Message.getFieldWithDefault(msg, 4, ""),
    state: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timestamp: (f = msg.getTimestamp()) && common_pb.TimestampStr.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Mission.MissionLogFeedback}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Mission.MissionLogFeedback;
  return proto.Yikun.Api.Mission.MissionLogFeedback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Mission.MissionLogFeedback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Mission.MissionLogFeedback}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIterator(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQueueId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 6:
      var value = new common_pb.TimestampStr;
      reader.readMessage(value,common_pb.TimestampStr.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Mission.MissionLogFeedback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Mission.MissionLogFeedback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Mission.MissionLogFeedback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIterator();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getQueueId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.TimestampStr.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 iterator = 1;
 * @return {number}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.getIterator = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.MissionLogFeedback} returns this
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.setIterator = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 queue_id = 2;
 * @return {number}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.getQueueId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Mission.MissionLogFeedback} returns this
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.setQueueId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string level = 3;
 * @return {string}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.MissionLogFeedback} returns this
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string info = 4;
 * @return {string}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.MissionLogFeedback} returns this
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string state = 5;
 * @return {string}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Mission.MissionLogFeedback} returns this
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Yikun.Api.Common.TimestampStr timestamp = 6;
 * @return {?proto.Yikun.Api.Common.TimestampStr}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.getTimestamp = function() {
  return /** @type{?proto.Yikun.Api.Common.TimestampStr} */ (
    jspb.Message.getWrapperField(this, common_pb.TimestampStr, 6));
};


/**
 * @param {?proto.Yikun.Api.Common.TimestampStr|undefined} value
 * @return {!proto.Yikun.Api.Mission.MissionLogFeedback} returns this
*/
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Yikun.Api.Mission.MissionLogFeedback} returns this
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Yikun.Api.Mission.MissionLogFeedback.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.Yikun.Api.Mission.ConstAction = {
  UNKNOWN: 0,
  MOVE_TO_KNOWN_POSITION: 1,
  MOVE_TO_POSITION: 2,
  RELATIVE_MOVE: 3,
  SWITCH_MAP: 4,
  WAIT_FOR_DI: 5,
  SET_DO: 6,
  RUN_UR_PROGRAM: 7
};

goog.object.extend(exports, proto.Yikun.Api.Mission);
