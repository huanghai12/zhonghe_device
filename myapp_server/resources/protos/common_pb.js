// source: common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.Yikun.Api.Common.Action', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.ActionList', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Backup', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.BackupsList', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.CommandFeedback', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Device', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.DeviceList', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Diagnostic', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.DiagnosticArray', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Dock', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Empty', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Lane', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.LaserScan', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.LevelEnum', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Map', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.MapList', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.NetDevice', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.NetworkConfiguration', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.PeopleMeasurement', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Point2D', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.PointCloudXY', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Pose', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.PoseRequest', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Position', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.PositionList', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Priority', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.ProtoBool', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.ProtoFloat', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.ProtoInt', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.ProtoMap', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.ProtoString', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.RelativeMoveRequest', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.RobotConfig', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.RobotInfo', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.RobotState', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.RobotStateEnum', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.SaveMap', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.SoundCommand', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.StateEnum', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.SubMapEnum', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Timestamp', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.TimestampStr', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.VelocityCommand', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.Waypoint', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.WaypointRequest', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.WiFiConnection', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.WiFiConnectionList', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.WiFiNetwork', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.WiFiNetworkList', null, global);
goog.exportSymbol('proto.Yikun.Api.Common.WiFiNetworkSecurity', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Empty.displayName = 'proto.Yikun.Api.Common.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.ProtoString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.ProtoString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.ProtoString.displayName = 'proto.Yikun.Api.Common.ProtoString';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.ProtoMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.ProtoMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.ProtoMap.displayName = 'proto.Yikun.Api.Common.ProtoMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.CommandFeedback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.CommandFeedback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.CommandFeedback.displayName = 'proto.Yikun.Api.Common.CommandFeedback';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Pose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Pose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Pose.displayName = 'proto.Yikun.Api.Common.Pose';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Point2D = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Point2D, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Point2D.displayName = 'proto.Yikun.Api.Common.Point2D';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.PoseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.PoseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.PoseRequest.displayName = 'proto.Yikun.Api.Common.PoseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Waypoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.Waypoint.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.Waypoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Waypoint.displayName = 'proto.Yikun.Api.Common.Waypoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.WaypointRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.WaypointRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.WaypointRequest.displayName = 'proto.Yikun.Api.Common.WaypointRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.VelocityCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.VelocityCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.VelocityCommand.displayName = 'proto.Yikun.Api.Common.VelocityCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.RobotState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.RobotState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.RobotState.displayName = 'proto.Yikun.Api.Common.RobotState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.NetDevice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.NetDevice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.NetDevice.displayName = 'proto.Yikun.Api.Common.NetDevice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.RobotInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.RobotInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.RobotInfo.displayName = 'proto.Yikun.Api.Common.RobotInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.ProtoInt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.ProtoInt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.ProtoInt.displayName = 'proto.Yikun.Api.Common.ProtoInt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.ProtoBool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.ProtoBool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.ProtoBool.displayName = 'proto.Yikun.Api.Common.ProtoBool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.ProtoFloat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.ProtoFloat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.ProtoFloat.displayName = 'proto.Yikun.Api.Common.ProtoFloat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.SaveMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.SaveMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.SaveMap.displayName = 'proto.Yikun.Api.Common.SaveMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.RelativeMoveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.RelativeMoveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.RelativeMoveRequest.displayName = 'proto.Yikun.Api.Common.RelativeMoveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Dock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Dock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Dock.displayName = 'proto.Yikun.Api.Common.Dock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Diagnostic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Diagnostic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Diagnostic.displayName = 'proto.Yikun.Api.Common.Diagnostic';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.DiagnosticArray = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.DiagnosticArray.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.DiagnosticArray, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.DiagnosticArray.displayName = 'proto.Yikun.Api.Common.DiagnosticArray';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Backup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Backup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Backup.displayName = 'proto.Yikun.Api.Common.Backup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.BackupsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.BackupsList.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.BackupsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.BackupsList.displayName = 'proto.Yikun.Api.Common.BackupsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.PeopleMeasurement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.PeopleMeasurement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.PeopleMeasurement.displayName = 'proto.Yikun.Api.Common.PeopleMeasurement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Timestamp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Timestamp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Timestamp.displayName = 'proto.Yikun.Api.Common.Timestamp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.TimestampStr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.TimestampStr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.TimestampStr.displayName = 'proto.Yikun.Api.Common.TimestampStr';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Device = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Device, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Device.displayName = 'proto.Yikun.Api.Common.Device';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.DeviceList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.DeviceList.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.DeviceList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.DeviceList.displayName = 'proto.Yikun.Api.Common.DeviceList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Position = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Position.displayName = 'proto.Yikun.Api.Common.Position';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Map = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Map, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Map.displayName = 'proto.Yikun.Api.Common.Map';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Action.displayName = 'proto.Yikun.Api.Common.Action';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.PositionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.PositionList.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.PositionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.PositionList.displayName = 'proto.Yikun.Api.Common.PositionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.MapList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.MapList.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.MapList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.MapList.displayName = 'proto.Yikun.Api.Common.MapList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.ActionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.ActionList.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.ActionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.ActionList.displayName = 'proto.Yikun.Api.Common.ActionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.SoundCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.SoundCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.SoundCommand.displayName = 'proto.Yikun.Api.Common.SoundCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.LaserScan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.LaserScan.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.LaserScan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.LaserScan.displayName = 'proto.Yikun.Api.Common.LaserScan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.PointCloudXY = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.PointCloudXY.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.PointCloudXY, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.PointCloudXY.displayName = 'proto.Yikun.Api.Common.PointCloudXY';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.NetworkConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.NetworkConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.NetworkConfiguration.displayName = 'proto.Yikun.Api.Common.NetworkConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.WiFiNetworkSecurity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.WiFiNetworkSecurity.displayName = 'proto.Yikun.Api.Common.WiFiNetworkSecurity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.WiFiNetwork = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.WiFiNetwork, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.WiFiNetwork.displayName = 'proto.Yikun.Api.Common.WiFiNetwork';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.WiFiNetworkList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.WiFiNetworkList.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.WiFiNetworkList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.WiFiNetworkList.displayName = 'proto.Yikun.Api.Common.WiFiNetworkList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.WiFiConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.WiFiConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.WiFiConnection.displayName = 'proto.Yikun.Api.Common.WiFiConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.WiFiConnectionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.WiFiConnectionList.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.WiFiConnectionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.WiFiConnectionList.displayName = 'proto.Yikun.Api.Common.WiFiConnectionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.Lane = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Yikun.Api.Common.Lane.repeatedFields_, null);
};
goog.inherits(proto.Yikun.Api.Common.Lane, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.Lane.displayName = 'proto.Yikun.Api.Common.Lane';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Yikun.Api.Common.RobotConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Yikun.Api.Common.RobotConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Yikun.Api.Common.RobotConfig.displayName = 'proto.Yikun.Api.Common.RobotConfig';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Empty}
 */
proto.Yikun.Api.Common.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Empty;
  return proto.Yikun.Api.Common.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Empty}
 */
proto.Yikun.Api.Common.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.ProtoString.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.ProtoString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.ProtoString} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoString.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.ProtoString}
 */
proto.Yikun.Api.Common.ProtoString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.ProtoString;
  return proto.Yikun.Api.Common.ProtoString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.ProtoString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.ProtoString}
 */
proto.Yikun.Api.Common.ProtoString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.ProtoString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.ProtoString.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.ProtoString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoString.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string data = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.ProtoString.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.ProtoString} returns this
 */
proto.Yikun.Api.Common.ProtoString.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.ProtoMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.ProtoMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    map: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subMap: jspb.Message.getFieldWithDefault(msg, 2, ""),
    originX: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    originY: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    originTheta: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    resolution: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    width: jspb.Message.getFieldWithDefault(msg, 7, 0),
    height: jspb.Message.getFieldWithDefault(msg, 8, 0),
    position: jspb.Message.getFieldWithDefault(msg, 9, 0),
    mapId: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.ProtoMap}
 */
proto.Yikun.Api.Common.ProtoMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.ProtoMap;
  return proto.Yikun.Api.Common.ProtoMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.ProtoMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.ProtoMap}
 */
proto.Yikun.Api.Common.ProtoMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMap(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubMap(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOriginX(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOriginY(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOriginTheta(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setResolution(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMapId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.ProtoMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.ProtoMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMap();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubMap();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOriginX();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getOriginY();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getOriginTheta();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getResolution();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getMapId();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
};


/**
 * optional string map = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getMap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setMap = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sub_map = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getSubMap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setSubMap = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float origin_x = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getOriginX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setOriginX = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float origin_y = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getOriginY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setOriginY = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float origin_theta = 5;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getOriginTheta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setOriginTheta = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float resolution = 6;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getResolution = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setResolution = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 width = 7;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 height = 8;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 position = 9;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 map_id = 10;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoMap.prototype.getMapId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoMap} returns this
 */
proto.Yikun.Api.Common.ProtoMap.prototype.setMapId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.CommandFeedback.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.CommandFeedback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.CommandFeedback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.CommandFeedback.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.CommandFeedback}
 */
proto.Yikun.Api.Common.CommandFeedback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.CommandFeedback;
  return proto.Yikun.Api.Common.CommandFeedback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.CommandFeedback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.CommandFeedback}
 */
proto.Yikun.Api.Common.CommandFeedback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.CommandFeedback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.CommandFeedback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.CommandFeedback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.CommandFeedback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 status = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.CommandFeedback.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.CommandFeedback} returns this
 */
proto.Yikun.Api.Common.CommandFeedback.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Pose.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Pose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Pose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Pose.toObject = function(includeInstance, msg) {
  var f, obj = {
    frame: jspb.Message.getFieldWithDefault(msg, 1, ""),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    orientation: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Pose}
 */
proto.Yikun.Api.Common.Pose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Pose;
  return proto.Yikun.Api.Common.Pose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Pose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Pose}
 */
proto.Yikun.Api.Common.Pose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrame(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Pose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Pose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Pose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Pose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrame();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional string frame = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.Pose.prototype.getFrame = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Pose} returns this
 */
proto.Yikun.Api.Common.Pose.prototype.setFrame = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float x = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.Pose.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Pose} returns this
 */
proto.Yikun.Api.Common.Pose.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float y = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.Pose.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Pose} returns this
 */
proto.Yikun.Api.Common.Pose.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float orientation = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.Pose.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Pose} returns this
 */
proto.Yikun.Api.Common.Pose.prototype.setOrientation = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Point2D.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Point2D.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Point2D} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Point2D.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Point2D}
 */
proto.Yikun.Api.Common.Point2D.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Point2D;
  return proto.Yikun.Api.Common.Point2D.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Point2D} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Point2D}
 */
proto.Yikun.Api.Common.Point2D.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Point2D.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Point2D.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Point2D} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Point2D.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.Point2D.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Point2D} returns this
 */
proto.Yikun.Api.Common.Point2D.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.Point2D.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Point2D} returns this
 */
proto.Yikun.Api.Common.Point2D.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.PoseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.PoseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.PoseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.PoseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    retries: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeout: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    pose: (f = msg.getPose()) && proto.Yikun.Api.Common.Pose.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.PoseRequest}
 */
proto.Yikun.Api.Common.PoseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.PoseRequest;
  return proto.Yikun.Api.Common.PoseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.PoseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.PoseRequest}
 */
proto.Yikun.Api.Common.PoseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetries(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTimeout(value);
      break;
    case 3:
      var value = new proto.Yikun.Api.Common.Pose;
      reader.readMessage(value,proto.Yikun.Api.Common.Pose.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.PoseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.PoseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.PoseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.PoseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetries();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Yikun.Api.Common.Pose.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 retries = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.PoseRequest.prototype.getRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.PoseRequest} returns this
 */
proto.Yikun.Api.Common.PoseRequest.prototype.setRetries = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float timeout = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.PoseRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.PoseRequest} returns this
 */
proto.Yikun.Api.Common.PoseRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional Pose pose = 3;
 * @return {?proto.Yikun.Api.Common.Pose}
 */
proto.Yikun.Api.Common.PoseRequest.prototype.getPose = function() {
  return /** @type{?proto.Yikun.Api.Common.Pose} */ (
    jspb.Message.getWrapperField(this, proto.Yikun.Api.Common.Pose, 3));
};


/**
 * @param {?proto.Yikun.Api.Common.Pose|undefined} value
 * @return {!proto.Yikun.Api.Common.PoseRequest} returns this
*/
proto.Yikun.Api.Common.PoseRequest.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Yikun.Api.Common.PoseRequest} returns this
 */
proto.Yikun.Api.Common.PoseRequest.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Yikun.Api.Common.PoseRequest.prototype.hasPose = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.Waypoint.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Waypoint.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Waypoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Waypoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Waypoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    poseList: jspb.Message.toObjectList(msg.getPoseList(),
    proto.Yikun.Api.Common.Pose.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Waypoint}
 */
proto.Yikun.Api.Common.Waypoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Waypoint;
  return proto.Yikun.Api.Common.Waypoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Waypoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Waypoint}
 */
proto.Yikun.Api.Common.Waypoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.Pose;
      reader.readMessage(value,proto.Yikun.Api.Common.Pose.deserializeBinaryFromReader);
      msg.addPose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Waypoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Waypoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Waypoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Waypoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Yikun.Api.Common.Pose.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Pose pose = 1;
 * @return {!Array<!proto.Yikun.Api.Common.Pose>}
 */
proto.Yikun.Api.Common.Waypoint.prototype.getPoseList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.Pose>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.Pose, 1));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.Pose>} value
 * @return {!proto.Yikun.Api.Common.Waypoint} returns this
*/
proto.Yikun.Api.Common.Waypoint.prototype.setPoseList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Yikun.Api.Common.Pose=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.Pose}
 */
proto.Yikun.Api.Common.Waypoint.prototype.addPose = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Yikun.Api.Common.Pose, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.Waypoint} returns this
 */
proto.Yikun.Api.Common.Waypoint.prototype.clearPoseList = function() {
  return this.setPoseList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.WaypointRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.WaypointRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.WaypointRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WaypointRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    retries: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeout: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    waypoint: (f = msg.getWaypoint()) && proto.Yikun.Api.Common.Waypoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.WaypointRequest}
 */
proto.Yikun.Api.Common.WaypointRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.WaypointRequest;
  return proto.Yikun.Api.Common.WaypointRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.WaypointRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.WaypointRequest}
 */
proto.Yikun.Api.Common.WaypointRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetries(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTimeout(value);
      break;
    case 3:
      var value = new proto.Yikun.Api.Common.Waypoint;
      reader.readMessage(value,proto.Yikun.Api.Common.Waypoint.deserializeBinaryFromReader);
      msg.setWaypoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.WaypointRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.WaypointRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.WaypointRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WaypointRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetries();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getWaypoint();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Yikun.Api.Common.Waypoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 retries = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.WaypointRequest.prototype.getRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.WaypointRequest} returns this
 */
proto.Yikun.Api.Common.WaypointRequest.prototype.setRetries = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float timeout = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.WaypointRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.WaypointRequest} returns this
 */
proto.Yikun.Api.Common.WaypointRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional Waypoint waypoint = 3;
 * @return {?proto.Yikun.Api.Common.Waypoint}
 */
proto.Yikun.Api.Common.WaypointRequest.prototype.getWaypoint = function() {
  return /** @type{?proto.Yikun.Api.Common.Waypoint} */ (
    jspb.Message.getWrapperField(this, proto.Yikun.Api.Common.Waypoint, 3));
};


/**
 * @param {?proto.Yikun.Api.Common.Waypoint|undefined} value
 * @return {!proto.Yikun.Api.Common.WaypointRequest} returns this
*/
proto.Yikun.Api.Common.WaypointRequest.prototype.setWaypoint = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Yikun.Api.Common.WaypointRequest} returns this
 */
proto.Yikun.Api.Common.WaypointRequest.prototype.clearWaypoint = function() {
  return this.setWaypoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Yikun.Api.Common.WaypointRequest.prototype.hasWaypoint = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.VelocityCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.VelocityCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.VelocityCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.VelocityCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    lin: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    ang: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.VelocityCommand}
 */
proto.Yikun.Api.Common.VelocityCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.VelocityCommand;
  return proto.Yikun.Api.Common.VelocityCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.VelocityCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.VelocityCommand}
 */
proto.Yikun.Api.Common.VelocityCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAng(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.VelocityCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.VelocityCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.VelocityCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.VelocityCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLin();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getAng();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float lin = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.VelocityCommand.prototype.getLin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.VelocityCommand} returns this
 */
proto.Yikun.Api.Common.VelocityCommand.prototype.setLin = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float ang = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.VelocityCommand.prototype.getAng = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.VelocityCommand} returns this
 */
proto.Yikun.Api.Common.VelocityCommand.prototype.setAng = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.RobotState.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.RobotState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.RobotState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.RobotState.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.RobotState}
 */
proto.Yikun.Api.Common.RobotState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.RobotState;
  return proto.Yikun.Api.Common.RobotState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.RobotState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.RobotState}
 */
proto.Yikun.Api.Common.RobotState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.RobotState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.RobotState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.RobotState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.RobotState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 state = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.RobotState.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RobotState} returns this
 */
proto.Yikun.Api.Common.RobotState.prototype.setState = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.NetDevice.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.NetDevice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.NetDevice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.NetDevice.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.NetDevice}
 */
proto.Yikun.Api.Common.NetDevice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.NetDevice;
  return proto.Yikun.Api.Common.NetDevice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.NetDevice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.NetDevice}
 */
proto.Yikun.Api.Common.NetDevice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.NetDevice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.NetDevice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.NetDevice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.NetDevice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.NetDevice.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.NetDevice} returns this
 */
proto.Yikun.Api.Common.NetDevice.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.RobotInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.RobotInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.RobotInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    pose: (f = msg.getPose()) && proto.Yikun.Api.Common.Pose.toObject(includeInstance, f),
    vel: (f = msg.getVel()) && proto.Yikun.Api.Common.VelocityCommand.toObject(includeInstance, f),
    distance: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    battery: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mapId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    mapUid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.RobotInfo}
 */
proto.Yikun.Api.Common.RobotInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.RobotInfo;
  return proto.Yikun.Api.Common.RobotInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.RobotInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.RobotInfo}
 */
proto.Yikun.Api.Common.RobotInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.Pose;
      reader.readMessage(value,proto.Yikun.Api.Common.Pose.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    case 2:
      var value = new proto.Yikun.Api.Common.VelocityCommand;
      reader.readMessage(value,proto.Yikun.Api.Common.VelocityCommand.deserializeBinaryFromReader);
      msg.setVel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBattery(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMapId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.RobotInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.RobotInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.RobotInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Yikun.Api.Common.Pose.serializeBinaryToWriter
    );
  }
  f = message.getVel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Yikun.Api.Common.VelocityCommand.serializeBinaryToWriter
    );
  }
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getBattery();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMapId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMapUid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional Pose pose = 1;
 * @return {?proto.Yikun.Api.Common.Pose}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.getPose = function() {
  return /** @type{?proto.Yikun.Api.Common.Pose} */ (
    jspb.Message.getWrapperField(this, proto.Yikun.Api.Common.Pose, 1));
};


/**
 * @param {?proto.Yikun.Api.Common.Pose|undefined} value
 * @return {!proto.Yikun.Api.Common.RobotInfo} returns this
*/
proto.Yikun.Api.Common.RobotInfo.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Yikun.Api.Common.RobotInfo} returns this
 */
proto.Yikun.Api.Common.RobotInfo.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.hasPose = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VelocityCommand vel = 2;
 * @return {?proto.Yikun.Api.Common.VelocityCommand}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.getVel = function() {
  return /** @type{?proto.Yikun.Api.Common.VelocityCommand} */ (
    jspb.Message.getWrapperField(this, proto.Yikun.Api.Common.VelocityCommand, 2));
};


/**
 * @param {?proto.Yikun.Api.Common.VelocityCommand|undefined} value
 * @return {!proto.Yikun.Api.Common.RobotInfo} returns this
*/
proto.Yikun.Api.Common.RobotInfo.prototype.setVel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Yikun.Api.Common.RobotInfo} returns this
 */
proto.Yikun.Api.Common.RobotInfo.prototype.clearVel = function() {
  return this.setVel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.hasVel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float distance = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RobotInfo} returns this
 */
proto.Yikun.Api.Common.RobotInfo.prototype.setDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 battery = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.getBattery = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RobotInfo} returns this
 */
proto.Yikun.Api.Common.RobotInfo.prototype.setBattery = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 map_id = 5;
 * @return {number}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.getMapId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RobotInfo} returns this
 */
proto.Yikun.Api.Common.RobotInfo.prototype.setMapId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string map_uid = 6;
 * @return {string}
 */
proto.Yikun.Api.Common.RobotInfo.prototype.getMapUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.RobotInfo} returns this
 */
proto.Yikun.Api.Common.RobotInfo.prototype.setMapUid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.ProtoInt.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.ProtoInt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.ProtoInt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoInt.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.ProtoInt}
 */
proto.Yikun.Api.Common.ProtoInt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.ProtoInt;
  return proto.Yikun.Api.Common.ProtoInt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.ProtoInt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.ProtoInt}
 */
proto.Yikun.Api.Common.ProtoInt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.ProtoInt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.ProtoInt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.ProtoInt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoInt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 data = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoInt.prototype.getData = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoInt} returns this
 */
proto.Yikun.Api.Common.ProtoInt.prototype.setData = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.ProtoBool.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.ProtoBool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.ProtoBool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoBool.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.ProtoBool}
 */
proto.Yikun.Api.Common.ProtoBool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.ProtoBool;
  return proto.Yikun.Api.Common.ProtoBool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.ProtoBool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.ProtoBool}
 */
proto.Yikun.Api.Common.ProtoBool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.ProtoBool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.ProtoBool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.ProtoBool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoBool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool data = 1;
 * @return {boolean}
 */
proto.Yikun.Api.Common.ProtoBool.prototype.getData = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Yikun.Api.Common.ProtoBool} returns this
 */
proto.Yikun.Api.Common.ProtoBool.prototype.setData = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.ProtoFloat.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.ProtoFloat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.ProtoFloat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoFloat.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.ProtoFloat}
 */
proto.Yikun.Api.Common.ProtoFloat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.ProtoFloat;
  return proto.Yikun.Api.Common.ProtoFloat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.ProtoFloat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.ProtoFloat}
 */
proto.Yikun.Api.Common.ProtoFloat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.ProtoFloat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.ProtoFloat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.ProtoFloat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ProtoFloat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
};


/**
 * optional float data = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.ProtoFloat.prototype.getData = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.ProtoFloat} returns this
 */
proto.Yikun.Api.Common.ProtoFloat.prototype.setData = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.SaveMap.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.SaveMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.SaveMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.SaveMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    save: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    sessionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orientation: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.SaveMap}
 */
proto.Yikun.Api.Common.SaveMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.SaveMap;
  return proto.Yikun.Api.Common.SaveMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.SaveMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.SaveMap}
 */
proto.Yikun.Api.Common.SaveMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSave(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSessionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.SaveMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.SaveMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.SaveMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.SaveMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSave();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSessionId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional bool save = 1;
 * @return {boolean}
 */
proto.Yikun.Api.Common.SaveMap.prototype.getSave = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Yikun.Api.Common.SaveMap} returns this
 */
proto.Yikun.Api.Common.SaveMap.prototype.setSave = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 session_id = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.SaveMap.prototype.getSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.SaveMap} returns this
 */
proto.Yikun.Api.Common.SaveMap.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.Yikun.Api.Common.SaveMap.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.SaveMap} returns this
 */
proto.Yikun.Api.Common.SaveMap.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float orientation = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.SaveMap.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.SaveMap} returns this
 */
proto.Yikun.Api.Common.SaveMap.prototype.setOrientation = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.RelativeMoveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.RelativeMoveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.RelativeMoveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    orientation: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    maxlinearspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    maxangularspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    collisiondetection: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timeout: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.RelativeMoveRequest}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.RelativeMoveRequest;
  return proto.Yikun.Api.Common.RelativeMoveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.RelativeMoveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.RelativeMoveRequest}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientation(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxlinearspeed(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxangularspeed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCollisiondetection(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.RelativeMoveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.RelativeMoveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.RelativeMoveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getMaxlinearspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getMaxangularspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getCollisiondetection();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float orientation = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.setOrientation = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float maxlinearspeed = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.getMaxlinearspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.setMaxlinearspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float maxangularspeed = 5;
 * @return {number}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.getMaxangularspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.setMaxangularspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 collisiondetection = 6;
 * @return {number}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.getCollisiondetection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.setCollisiondetection = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional float timeout = 7;
 * @return {number}
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RelativeMoveRequest} returns this
 */
proto.Yikun.Api.Common.RelativeMoveRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Dock.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Dock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Dock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Dock.toObject = function(includeInstance, msg) {
  var f, obj = {
    pose: (f = msg.getPose()) && proto.Yikun.Api.Common.Pose.toObject(includeInstance, f),
    offsetX: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    offsetY: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    offsetOrientation: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Dock}
 */
proto.Yikun.Api.Common.Dock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Dock;
  return proto.Yikun.Api.Common.Dock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Dock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Dock}
 */
proto.Yikun.Api.Common.Dock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.Pose;
      reader.readMessage(value,proto.Yikun.Api.Common.Pose.deserializeBinaryFromReader);
      msg.setPose(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffsetX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffsetY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffsetOrientation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Dock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Dock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Dock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Dock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPose();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Yikun.Api.Common.Pose.serializeBinaryToWriter
    );
  }
  f = message.getOffsetX();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getOffsetY();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getOffsetOrientation();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional Pose pose = 1;
 * @return {?proto.Yikun.Api.Common.Pose}
 */
proto.Yikun.Api.Common.Dock.prototype.getPose = function() {
  return /** @type{?proto.Yikun.Api.Common.Pose} */ (
    jspb.Message.getWrapperField(this, proto.Yikun.Api.Common.Pose, 1));
};


/**
 * @param {?proto.Yikun.Api.Common.Pose|undefined} value
 * @return {!proto.Yikun.Api.Common.Dock} returns this
*/
proto.Yikun.Api.Common.Dock.prototype.setPose = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Yikun.Api.Common.Dock} returns this
 */
proto.Yikun.Api.Common.Dock.prototype.clearPose = function() {
  return this.setPose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Yikun.Api.Common.Dock.prototype.hasPose = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float offset_x = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.Dock.prototype.getOffsetX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Dock} returns this
 */
proto.Yikun.Api.Common.Dock.prototype.setOffsetX = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float offset_y = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.Dock.prototype.getOffsetY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Dock} returns this
 */
proto.Yikun.Api.Common.Dock.prototype.setOffsetY = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float offset_orientation = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.Dock.prototype.getOffsetOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Dock} returns this
 */
proto.Yikun.Api.Common.Dock.prototype.setOffsetOrientation = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Diagnostic.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Diagnostic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Diagnostic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Diagnostic.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hardwareId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    level: jspb.Message.getFieldWithDefault(msg, 4, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 5, ""),
    firstTime: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastTime: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Diagnostic}
 */
proto.Yikun.Api.Common.Diagnostic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Diagnostic;
  return proto.Yikun.Api.Common.Diagnostic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Diagnostic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Diagnostic}
 */
proto.Yikun.Api.Common.Diagnostic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwareId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Diagnostic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Diagnostic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Diagnostic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Diagnostic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHardwareId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFirstTime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastTime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.Diagnostic.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Diagnostic} returns this
 */
proto.Yikun.Api.Common.Diagnostic.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.Diagnostic.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Diagnostic} returns this
 */
proto.Yikun.Api.Common.Diagnostic.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hardware_id = 3;
 * @return {string}
 */
proto.Yikun.Api.Common.Diagnostic.prototype.getHardwareId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Diagnostic} returns this
 */
proto.Yikun.Api.Common.Diagnostic.prototype.setHardwareId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 level = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.Diagnostic.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Diagnostic} returns this
 */
proto.Yikun.Api.Common.Diagnostic.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string msg = 5;
 * @return {string}
 */
proto.Yikun.Api.Common.Diagnostic.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Diagnostic} returns this
 */
proto.Yikun.Api.Common.Diagnostic.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string first_time = 6;
 * @return {string}
 */
proto.Yikun.Api.Common.Diagnostic.prototype.getFirstTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Diagnostic} returns this
 */
proto.Yikun.Api.Common.Diagnostic.prototype.setFirstTime = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string last_time = 7;
 * @return {string}
 */
proto.Yikun.Api.Common.Diagnostic.prototype.getLastTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Diagnostic} returns this
 */
proto.Yikun.Api.Common.Diagnostic.prototype.setLastTime = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.DiagnosticArray.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.DiagnosticArray.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.DiagnosticArray.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.DiagnosticArray} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.DiagnosticArray.toObject = function(includeInstance, msg) {
  var f, obj = {
    diagnosticsList: jspb.Message.toObjectList(msg.getDiagnosticsList(),
    proto.Yikun.Api.Common.Diagnostic.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.DiagnosticArray}
 */
proto.Yikun.Api.Common.DiagnosticArray.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.DiagnosticArray;
  return proto.Yikun.Api.Common.DiagnosticArray.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.DiagnosticArray} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.DiagnosticArray}
 */
proto.Yikun.Api.Common.DiagnosticArray.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.Diagnostic;
      reader.readMessage(value,proto.Yikun.Api.Common.Diagnostic.deserializeBinaryFromReader);
      msg.addDiagnostics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.DiagnosticArray.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.DiagnosticArray.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.DiagnosticArray} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.DiagnosticArray.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDiagnosticsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Yikun.Api.Common.Diagnostic.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Diagnostic diagnostics = 1;
 * @return {!Array<!proto.Yikun.Api.Common.Diagnostic>}
 */
proto.Yikun.Api.Common.DiagnosticArray.prototype.getDiagnosticsList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.Diagnostic>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.Diagnostic, 1));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.Diagnostic>} value
 * @return {!proto.Yikun.Api.Common.DiagnosticArray} returns this
*/
proto.Yikun.Api.Common.DiagnosticArray.prototype.setDiagnosticsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Yikun.Api.Common.Diagnostic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.Diagnostic}
 */
proto.Yikun.Api.Common.DiagnosticArray.prototype.addDiagnostics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Yikun.Api.Common.Diagnostic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.DiagnosticArray} returns this
 */
proto.Yikun.Api.Common.DiagnosticArray.prototype.clearDiagnosticsList = function() {
  return this.setDiagnosticsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Backup.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Backup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Backup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Backup.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Backup}
 */
proto.Yikun.Api.Common.Backup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Backup;
  return proto.Yikun.Api.Common.Backup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Backup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Backup}
 */
proto.Yikun.Api.Common.Backup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Backup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Backup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Backup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Backup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.Backup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Backup} returns this
 */
proto.Yikun.Api.Common.Backup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.Backup.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Backup} returns this
 */
proto.Yikun.Api.Common.Backup.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.BackupsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.BackupsList.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.BackupsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.BackupsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.BackupsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    backupsList: jspb.Message.toObjectList(msg.getBackupsList(),
    proto.Yikun.Api.Common.Backup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.BackupsList}
 */
proto.Yikun.Api.Common.BackupsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.BackupsList;
  return proto.Yikun.Api.Common.BackupsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.BackupsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.BackupsList}
 */
proto.Yikun.Api.Common.BackupsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.Backup;
      reader.readMessage(value,proto.Yikun.Api.Common.Backup.deserializeBinaryFromReader);
      msg.addBackups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.BackupsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.BackupsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.BackupsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.BackupsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Yikun.Api.Common.Backup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Backup backups = 1;
 * @return {!Array<!proto.Yikun.Api.Common.Backup>}
 */
proto.Yikun.Api.Common.BackupsList.prototype.getBackupsList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.Backup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.Backup, 1));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.Backup>} value
 * @return {!proto.Yikun.Api.Common.BackupsList} returns this
*/
proto.Yikun.Api.Common.BackupsList.prototype.setBackupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Yikun.Api.Common.Backup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.Backup}
 */
proto.Yikun.Api.Common.BackupsList.prototype.addBackups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Yikun.Api.Common.Backup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.BackupsList} returns this
 */
proto.Yikun.Api.Common.BackupsList.prototype.clearBackupsList = function() {
  return this.setBackupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.PeopleMeasurement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.PeopleMeasurement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.PeopleMeasurement.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    distance: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.PeopleMeasurement}
 */
proto.Yikun.Api.Common.PeopleMeasurement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.PeopleMeasurement;
  return proto.Yikun.Api.Common.PeopleMeasurement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.PeopleMeasurement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.PeopleMeasurement}
 */
proto.Yikun.Api.Common.PeopleMeasurement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.PeopleMeasurement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.PeopleMeasurement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.PeopleMeasurement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.PeopleMeasurement} returns this
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.PeopleMeasurement} returns this
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.PeopleMeasurement} returns this
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float distance = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.PeopleMeasurement} returns this
 */
proto.Yikun.Api.Common.PeopleMeasurement.prototype.setDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Timestamp.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Timestamp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Timestamp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Timestamp.toObject = function(includeInstance, msg) {
  var f, obj = {
    sec: jspb.Message.getFieldWithDefault(msg, 1, 0),
    usec: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Timestamp}
 */
proto.Yikun.Api.Common.Timestamp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Timestamp;
  return proto.Yikun.Api.Common.Timestamp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Timestamp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Timestamp}
 */
proto.Yikun.Api.Common.Timestamp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSec(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUsec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Timestamp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Timestamp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Timestamp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Timestamp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSec();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getUsec();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 sec = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.Timestamp.prototype.getSec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Timestamp} returns this
 */
proto.Yikun.Api.Common.Timestamp.prototype.setSec = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 usec = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.Timestamp.prototype.getUsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Timestamp} returns this
 */
proto.Yikun.Api.Common.Timestamp.prototype.setUsec = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.TimestampStr.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.TimestampStr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.TimestampStr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.TimestampStr.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.TimestampStr}
 */
proto.Yikun.Api.Common.TimestampStr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.TimestampStr;
  return proto.Yikun.Api.Common.TimestampStr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.TimestampStr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.TimestampStr}
 */
proto.Yikun.Api.Common.TimestampStr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.TimestampStr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.TimestampStr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.TimestampStr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.TimestampStr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string time = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.TimestampStr.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.TimestampStr} returns this
 */
proto.Yikun.Api.Common.TimestampStr.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Device.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Device.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Device} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Device.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ip: jspb.Message.getFieldWithDefault(msg, 4, ""),
    port: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    rrt: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    readOnly: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Device}
 */
proto.Yikun.Api.Common.Device.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Device;
  return proto.Yikun.Api.Common.Device.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Device} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Device}
 */
proto.Yikun.Api.Common.Device.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPort(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRrt(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Device.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Device.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Device} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Device.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPort();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getRrt();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getReadOnly();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.Device.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Device} returns this
 */
proto.Yikun.Api.Common.Device.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.Device.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Device} returns this
 */
proto.Yikun.Api.Common.Device.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.Yikun.Api.Common.Device.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Device} returns this
 */
proto.Yikun.Api.Common.Device.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ip = 4;
 * @return {string}
 */
proto.Yikun.Api.Common.Device.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Device} returns this
 */
proto.Yikun.Api.Common.Device.prototype.setIp = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string port = 5;
 * @return {string}
 */
proto.Yikun.Api.Common.Device.prototype.getPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Device} returns this
 */
proto.Yikun.Api.Common.Device.prototype.setPort = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type = 6;
 * @return {number}
 */
proto.Yikun.Api.Common.Device.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Device} returns this
 */
proto.Yikun.Api.Common.Device.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool active = 7;
 * @return {boolean}
 */
proto.Yikun.Api.Common.Device.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Yikun.Api.Common.Device} returns this
 */
proto.Yikun.Api.Common.Device.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional float rrt = 8;
 * @return {number}
 */
proto.Yikun.Api.Common.Device.prototype.getRrt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Device} returns this
 */
proto.Yikun.Api.Common.Device.prototype.setRrt = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool read_only = 9;
 * @return {boolean}
 */
proto.Yikun.Api.Common.Device.prototype.getReadOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Yikun.Api.Common.Device} returns this
 */
proto.Yikun.Api.Common.Device.prototype.setReadOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.DeviceList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.DeviceList.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.DeviceList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.DeviceList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.DeviceList.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceList: jspb.Message.toObjectList(msg.getDeviceList(),
    proto.Yikun.Api.Common.Device.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.DeviceList}
 */
proto.Yikun.Api.Common.DeviceList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.DeviceList;
  return proto.Yikun.Api.Common.DeviceList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.DeviceList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.DeviceList}
 */
proto.Yikun.Api.Common.DeviceList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.Device;
      reader.readMessage(value,proto.Yikun.Api.Common.Device.deserializeBinaryFromReader);
      msg.addDevice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.DeviceList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.DeviceList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.DeviceList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.DeviceList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Yikun.Api.Common.Device.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Device device = 1;
 * @return {!Array<!proto.Yikun.Api.Common.Device>}
 */
proto.Yikun.Api.Common.DeviceList.prototype.getDeviceList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.Device>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.Device, 1));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.Device>} value
 * @return {!proto.Yikun.Api.Common.DeviceList} returns this
*/
proto.Yikun.Api.Common.DeviceList.prototype.setDeviceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Yikun.Api.Common.Device=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.Device}
 */
proto.Yikun.Api.Common.DeviceList.prototype.addDevice = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Yikun.Api.Common.Device, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.DeviceList} returns this
 */
proto.Yikun.Api.Common.DeviceList.prototype.clearDeviceList = function() {
  return this.setDeviceList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Position.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Position.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Position} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Position.toObject = function(includeInstance, msg) {
  var f, obj = {
    posId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    posX: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    posY: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    orientation: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    mapId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    parentId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    offsetX: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    offsetY: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    uuid: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Position}
 */
proto.Yikun.Api.Common.Position.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Position;
  return proto.Yikun.Api.Common.Position.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Position}
 */
proto.Yikun.Api.Common.Position.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPosX(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPosY(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientation(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMapId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParentId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffsetX(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOffsetY(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Position.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Position.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPosX();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getPosY();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getMapId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getParentId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getOffsetX();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getOffsetY();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional int32 pos_id = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.Position.prototype.getPosId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setPosId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.Position.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float pos_x = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.Position.prototype.getPosX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setPosX = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float pos_y = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.Position.prototype.getPosY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setPosY = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float orientation = 5;
 * @return {number}
 */
proto.Yikun.Api.Common.Position.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setOrientation = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 type = 6;
 * @return {number}
 */
proto.Yikun.Api.Common.Position.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 map_id = 7;
 * @return {number}
 */
proto.Yikun.Api.Common.Position.prototype.getMapId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setMapId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 parent_id = 8;
 * @return {number}
 */
proto.Yikun.Api.Common.Position.prototype.getParentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setParentId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional float offset_x = 9;
 * @return {number}
 */
proto.Yikun.Api.Common.Position.prototype.getOffsetX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setOffsetX = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float offset_y = 10;
 * @return {number}
 */
proto.Yikun.Api.Common.Position.prototype.getOffsetY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setOffsetY = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string uuid = 11;
 * @return {string}
 */
proto.Yikun.Api.Common.Position.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Position} returns this
 */
proto.Yikun.Api.Common.Position.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Map.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Map.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Map} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Map.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sessionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    webMap: jspb.Message.getFieldWithDefault(msg, 4, ""),
    navMap: jspb.Message.getFieldWithDefault(msg, 5, ""),
    resolution: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    originX: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    originY: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    originTheta: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    width: jspb.Message.getFieldWithDefault(msg, 10, 0),
    height: jspb.Message.getFieldWithDefault(msg, 11, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Map}
 */
proto.Yikun.Api.Common.Map.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Map;
  return proto.Yikun.Api.Common.Map.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Map} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Map}
 */
proto.Yikun.Api.Common.Map.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSessionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebMap(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNavMap(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setResolution(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOriginX(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOriginY(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOriginTheta(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Map.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Map.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Map} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Map.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSessionId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWebMap();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNavMap();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getResolution();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getOriginX();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getOriginY();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getOriginTheta();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.Map.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 session_id = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.Map.prototype.getSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.Yikun.Api.Common.Map.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string web_map = 4;
 * @return {string}
 */
proto.Yikun.Api.Common.Map.prototype.getWebMap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setWebMap = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string nav_map = 5;
 * @return {string}
 */
proto.Yikun.Api.Common.Map.prototype.getNavMap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setNavMap = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float resolution = 6;
 * @return {number}
 */
proto.Yikun.Api.Common.Map.prototype.getResolution = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setResolution = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float origin_x = 7;
 * @return {number}
 */
proto.Yikun.Api.Common.Map.prototype.getOriginX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setOriginX = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float origin_y = 8;
 * @return {number}
 */
proto.Yikun.Api.Common.Map.prototype.getOriginY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setOriginY = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float origin_theta = 9;
 * @return {number}
 */
proto.Yikun.Api.Common.Map.prototype.getOriginTheta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setOriginTheta = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int32 width = 10;
 * @return {number}
 */
proto.Yikun.Api.Common.Map.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 height = 11;
 * @return {number}
 */
proto.Yikun.Api.Common.Map.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string uuid = 12;
 * @return {string}
 */
proto.Yikun.Api.Common.Map.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Map} returns this
 */
proto.Yikun.Api.Common.Map.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mapId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sessionId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Action}
 */
proto.Yikun.Api.Common.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Action;
  return proto.Yikun.Api.Common.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Action}
 */
proto.Yikun.Api.Common.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMapId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSessionId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMapId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSessionId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.Action.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Action} returns this
 */
proto.Yikun.Api.Common.Action.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.Action.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Action} returns this
 */
proto.Yikun.Api.Common.Action.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.Yikun.Api.Common.Action.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Action} returns this
 */
proto.Yikun.Api.Common.Action.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 map_id = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.Action.prototype.getMapId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Action} returns this
 */
proto.Yikun.Api.Common.Action.prototype.setMapId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 session_id = 5;
 * @return {number}
 */
proto.Yikun.Api.Common.Action.prototype.getSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Action} returns this
 */
proto.Yikun.Api.Common.Action.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string uuid = 6;
 * @return {string}
 */
proto.Yikun.Api.Common.Action.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Action} returns this
 */
proto.Yikun.Api.Common.Action.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.PositionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.PositionList.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.PositionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.PositionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.PositionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionList: jspb.Message.toObjectList(msg.getPositionList(),
    proto.Yikun.Api.Common.Position.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.PositionList}
 */
proto.Yikun.Api.Common.PositionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.PositionList;
  return proto.Yikun.Api.Common.PositionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.PositionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.PositionList}
 */
proto.Yikun.Api.Common.PositionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.Position;
      reader.readMessage(value,proto.Yikun.Api.Common.Position.deserializeBinaryFromReader);
      msg.addPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.PositionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.PositionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.PositionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.PositionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Yikun.Api.Common.Position.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Position position = 1;
 * @return {!Array<!proto.Yikun.Api.Common.Position>}
 */
proto.Yikun.Api.Common.PositionList.prototype.getPositionList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.Position>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.Position, 1));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.Position>} value
 * @return {!proto.Yikun.Api.Common.PositionList} returns this
*/
proto.Yikun.Api.Common.PositionList.prototype.setPositionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Yikun.Api.Common.Position=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.Position}
 */
proto.Yikun.Api.Common.PositionList.prototype.addPosition = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Yikun.Api.Common.Position, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.PositionList} returns this
 */
proto.Yikun.Api.Common.PositionList.prototype.clearPositionList = function() {
  return this.setPositionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.MapList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.MapList.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.MapList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.MapList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.MapList.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapList: jspb.Message.toObjectList(msg.getMapList(),
    proto.Yikun.Api.Common.Map.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.MapList}
 */
proto.Yikun.Api.Common.MapList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.MapList;
  return proto.Yikun.Api.Common.MapList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.MapList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.MapList}
 */
proto.Yikun.Api.Common.MapList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.Map;
      reader.readMessage(value,proto.Yikun.Api.Common.Map.deserializeBinaryFromReader);
      msg.addMap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.MapList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.MapList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.MapList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.MapList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Yikun.Api.Common.Map.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Map map = 1;
 * @return {!Array<!proto.Yikun.Api.Common.Map>}
 */
proto.Yikun.Api.Common.MapList.prototype.getMapList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.Map>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.Map, 1));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.Map>} value
 * @return {!proto.Yikun.Api.Common.MapList} returns this
*/
proto.Yikun.Api.Common.MapList.prototype.setMapList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Yikun.Api.Common.Map=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.Map}
 */
proto.Yikun.Api.Common.MapList.prototype.addMap = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Yikun.Api.Common.Map, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.MapList} returns this
 */
proto.Yikun.Api.Common.MapList.prototype.clearMapList = function() {
  return this.setMapList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.ActionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.ActionList.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.ActionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.ActionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ActionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionList: jspb.Message.toObjectList(msg.getActionList(),
    proto.Yikun.Api.Common.Action.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.ActionList}
 */
proto.Yikun.Api.Common.ActionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.ActionList;
  return proto.Yikun.Api.Common.ActionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.ActionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.ActionList}
 */
proto.Yikun.Api.Common.ActionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.Action;
      reader.readMessage(value,proto.Yikun.Api.Common.Action.deserializeBinaryFromReader);
      msg.addAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.ActionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.ActionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.ActionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.ActionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Yikun.Api.Common.Action.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Action action = 1;
 * @return {!Array<!proto.Yikun.Api.Common.Action>}
 */
proto.Yikun.Api.Common.ActionList.prototype.getActionList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.Action, 1));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.Action>} value
 * @return {!proto.Yikun.Api.Common.ActionList} returns this
*/
proto.Yikun.Api.Common.ActionList.prototype.setActionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Yikun.Api.Common.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.Action}
 */
proto.Yikun.Api.Common.ActionList.prototype.addAction = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Yikun.Api.Common.Action, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.ActionList} returns this
 */
proto.Yikun.Api.Common.ActionList.prototype.clearActionList = function() {
  return this.setActionList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.SoundCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.SoundCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.SoundCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.SoundCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    duration: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    volume: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    wave: jspb.Message.getFieldWithDefault(msg, 4, ""),
    format: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.SoundCommand}
 */
proto.Yikun.Api.Common.SoundCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.SoundCommand;
  return proto.Yikun.Api.Common.SoundCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.SoundCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.SoundCommand}
 */
proto.Yikun.Api.Common.SoundCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDuration(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVolume(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWave(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.SoundCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.SoundCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.SoundCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.SoundCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getWave();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFormat();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.SoundCommand.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.SoundCommand} returns this
 */
proto.Yikun.Api.Common.SoundCommand.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float duration = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.SoundCommand.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.SoundCommand} returns this
 */
proto.Yikun.Api.Common.SoundCommand.prototype.setDuration = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float volume = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.SoundCommand.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.SoundCommand} returns this
 */
proto.Yikun.Api.Common.SoundCommand.prototype.setVolume = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string wave = 4;
 * @return {string}
 */
proto.Yikun.Api.Common.SoundCommand.prototype.getWave = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.SoundCommand} returns this
 */
proto.Yikun.Api.Common.SoundCommand.prototype.setWave = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string format = 5;
 * @return {string}
 */
proto.Yikun.Api.Common.SoundCommand.prototype.getFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.SoundCommand} returns this
 */
proto.Yikun.Api.Common.SoundCommand.prototype.setFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.LaserScan.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.LaserScan.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.LaserScan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.LaserScan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.LaserScan.toObject = function(includeInstance, msg) {
  var f, obj = {
    frameId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    angleMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    angleMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    angleIncrement: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    timeIncrement: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    scanTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    rangeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    rangeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    rangesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 10)) == null ? undefined : f,
    intensitiesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.LaserScan}
 */
proto.Yikun.Api.Common.LaserScan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.LaserScan;
  return proto.Yikun.Api.Common.LaserScan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.LaserScan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.LaserScan}
 */
proto.Yikun.Api.Common.LaserScan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAngleMin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAngleMax(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAngleIncrement(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTimeIncrement(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScanTime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRangeMin(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRangeMax(value);
      break;
    case 10:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setRangesList(value);
      break;
    case 11:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setIntensitiesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.LaserScan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.LaserScan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.LaserScan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.LaserScan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrameId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStamp();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getAngleMin();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getAngleMax();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getAngleIncrement();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getTimeIncrement();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getScanTime();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getRangeMin();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getRangeMax();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getRangesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      10,
      f
    );
  }
  f = message.getIntensitiesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      11,
      f
    );
  }
};


/**
 * optional string frame_id = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getFrameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setFrameId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double stamp = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getStamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setStamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float angle_min = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getAngleMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setAngleMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float angle_max = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getAngleMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setAngleMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float angle_increment = 5;
 * @return {number}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getAngleIncrement = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setAngleIncrement = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float time_increment = 6;
 * @return {number}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getTimeIncrement = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setTimeIncrement = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float scan_time = 7;
 * @return {number}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getScanTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setScanTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float range_min = 8;
 * @return {number}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getRangeMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setRangeMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float range_max = 9;
 * @return {number}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getRangeMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setRangeMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * repeated float ranges = 10;
 * @return {!Array<number>}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getRangesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setRangesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.addRanges = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.clearRangesList = function() {
  return this.setRangesList([]);
};


/**
 * repeated float intensities = 11;
 * @return {!Array<number>}
 */
proto.Yikun.Api.Common.LaserScan.prototype.getIntensitiesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 11));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.setIntensitiesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.addIntensities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.LaserScan} returns this
 */
proto.Yikun.Api.Common.LaserScan.prototype.clearIntensitiesList = function() {
  return this.setIntensitiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.PointCloudXY.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.PointCloudXY.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.PointCloudXY.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.PointCloudXY} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.PointCloudXY.toObject = function(includeInstance, msg) {
  var f, obj = {
    stamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.Yikun.Api.Common.Point2D.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.PointCloudXY}
 */
proto.Yikun.Api.Common.PointCloudXY.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.PointCloudXY;
  return proto.Yikun.Api.Common.PointCloudXY.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.PointCloudXY} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.PointCloudXY}
 */
proto.Yikun.Api.Common.PointCloudXY.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStamp(value);
      break;
    case 2:
      var value = new proto.Yikun.Api.Common.Point2D;
      reader.readMessage(value,proto.Yikun.Api.Common.Point2D.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.PointCloudXY.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.PointCloudXY.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.PointCloudXY} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.PointCloudXY.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStamp();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Yikun.Api.Common.Point2D.serializeBinaryToWriter
    );
  }
};


/**
 * optional double stamp = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.PointCloudXY.prototype.getStamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.PointCloudXY} returns this
 */
proto.Yikun.Api.Common.PointCloudXY.prototype.setStamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * repeated Point2D points = 2;
 * @return {!Array<!proto.Yikun.Api.Common.Point2D>}
 */
proto.Yikun.Api.Common.PointCloudXY.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.Point2D>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.Point2D, 2));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.Point2D>} value
 * @return {!proto.Yikun.Api.Common.PointCloudXY} returns this
*/
proto.Yikun.Api.Common.PointCloudXY.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Yikun.Api.Common.Point2D=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.Point2D}
 */
proto.Yikun.Api.Common.PointCloudXY.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Yikun.Api.Common.Point2D, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.PointCloudXY} returns this
 */
proto.Yikun.Api.Common.PointCloudXY.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.NetworkConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.NetworkConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.NetworkConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    device: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ssid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ipv4: jspb.Message.getFieldWithDefault(msg, 3, ""),
    netmask: jspb.Message.getFieldWithDefault(msg, 4, ""),
    broadcast: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.NetworkConfiguration}
 */
proto.Yikun.Api.Common.NetworkConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.NetworkConfiguration;
  return proto.Yikun.Api.Common.NetworkConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.NetworkConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.NetworkConfiguration}
 */
proto.Yikun.Api.Common.NetworkConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpv4(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetmask(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBroadcast(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.NetworkConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.NetworkConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.NetworkConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSsid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIpv4();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNetmask();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBroadcast();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string device = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.NetworkConfiguration} returns this
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.setDevice = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ssid = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.getSsid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.NetworkConfiguration} returns this
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.setSsid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ipv4 = 3;
 * @return {string}
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.getIpv4 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.NetworkConfiguration} returns this
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.setIpv4 = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string netmask = 4;
 * @return {string}
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.getNetmask = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.NetworkConfiguration} returns this
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.setNetmask = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string broadcast = 5;
 * @return {string}
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.getBroadcast = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.NetworkConfiguration} returns this
 */
proto.Yikun.Api.Common.NetworkConfiguration.prototype.setBroadcast = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.WiFiNetworkSecurity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.WiFiNetworkSecurity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.toObject = function(includeInstance, msg) {
  var f, obj = {
    ssid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.WiFiNetworkSecurity}
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.WiFiNetworkSecurity;
  return proto.Yikun.Api.Common.WiFiNetworkSecurity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.WiFiNetworkSecurity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.WiFiNetworkSecurity}
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.WiFiNetworkSecurity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.WiFiNetworkSecurity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSsid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ssid = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.prototype.getSsid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiNetworkSecurity} returns this
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.prototype.setSsid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiNetworkSecurity} returns this
 */
proto.Yikun.Api.Common.WiFiNetworkSecurity.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.WiFiNetwork.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.WiFiNetwork} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiNetwork.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ssid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    chan: jspb.Message.getFieldWithDefault(msg, 3, 0),
    signal: jspb.Message.getFieldWithDefault(msg, 4, 0),
    device: jspb.Message.getFieldWithDefault(msg, 5, ""),
    active: jspb.Message.getFieldWithDefault(msg, 6, ""),
    inUse: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.WiFiNetwork}
 */
proto.Yikun.Api.Common.WiFiNetwork.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.WiFiNetwork;
  return proto.Yikun.Api.Common.WiFiNetwork.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.WiFiNetwork} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.WiFiNetwork}
 */
proto.Yikun.Api.Common.WiFiNetwork.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChan(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSignal(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setActive(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInUse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.WiFiNetwork.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.WiFiNetwork} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiNetwork.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSsid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChan();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSignal();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getActive();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInUse();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiNetwork} returns this
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ssid = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.getSsid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiNetwork} returns this
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.setSsid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 chan = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.getChan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.WiFiNetwork} returns this
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.setChan = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 signal = 4;
 * @return {number}
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.getSignal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.WiFiNetwork} returns this
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.setSignal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string device = 5;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiNetwork} returns this
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.setDevice = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string active = 6;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.getActive = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiNetwork} returns this
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.setActive = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool in_use = 7;
 * @return {boolean}
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.getInUse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Yikun.Api.Common.WiFiNetwork} returns this
 */
proto.Yikun.Api.Common.WiFiNetwork.prototype.setInUse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.WiFiNetworkList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.WiFiNetworkList.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.WiFiNetworkList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.WiFiNetworkList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiNetworkList.toObject = function(includeInstance, msg) {
  var f, obj = {
    networksList: jspb.Message.toObjectList(msg.getNetworksList(),
    proto.Yikun.Api.Common.WiFiNetwork.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.WiFiNetworkList}
 */
proto.Yikun.Api.Common.WiFiNetworkList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.WiFiNetworkList;
  return proto.Yikun.Api.Common.WiFiNetworkList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.WiFiNetworkList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.WiFiNetworkList}
 */
proto.Yikun.Api.Common.WiFiNetworkList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.WiFiNetwork;
      reader.readMessage(value,proto.Yikun.Api.Common.WiFiNetwork.deserializeBinaryFromReader);
      msg.addNetworks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.WiFiNetworkList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.WiFiNetworkList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.WiFiNetworkList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiNetworkList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Yikun.Api.Common.WiFiNetwork.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WiFiNetwork networks = 1;
 * @return {!Array<!proto.Yikun.Api.Common.WiFiNetwork>}
 */
proto.Yikun.Api.Common.WiFiNetworkList.prototype.getNetworksList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.WiFiNetwork>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.WiFiNetwork, 1));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.WiFiNetwork>} value
 * @return {!proto.Yikun.Api.Common.WiFiNetworkList} returns this
*/
proto.Yikun.Api.Common.WiFiNetworkList.prototype.setNetworksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Yikun.Api.Common.WiFiNetwork=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.WiFiNetwork}
 */
proto.Yikun.Api.Common.WiFiNetworkList.prototype.addNetworks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Yikun.Api.Common.WiFiNetwork, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.WiFiNetworkList} returns this
 */
proto.Yikun.Api.Common.WiFiNetworkList.prototype.clearNetworksList = function() {
  return this.setNetworksList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.WiFiConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.WiFiConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    state: jspb.Message.getFieldWithDefault(msg, 4, ""),
    active: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timestamp: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.WiFiConnection}
 */
proto.Yikun.Api.Common.WiFiConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.WiFiConnection;
  return proto.Yikun.Api.Common.WiFiConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.WiFiConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.WiFiConnection}
 */
proto.Yikun.Api.Common.WiFiConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setActive(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.WiFiConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.WiFiConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getActive();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiConnection} returns this
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiConnection} returns this
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiConnection} returns this
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string state = 4;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiConnection} returns this
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string active = 5;
 * @return {string}
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.getActive = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.WiFiConnection} returns this
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.setActive = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double timestamp = 6;
 * @return {number}
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.WiFiConnection} returns this
 */
proto.Yikun.Api.Common.WiFiConnection.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.WiFiConnectionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.WiFiConnectionList.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.WiFiConnectionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.WiFiConnectionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiConnectionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionsList: jspb.Message.toObjectList(msg.getConnectionsList(),
    proto.Yikun.Api.Common.WiFiConnection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.WiFiConnectionList}
 */
proto.Yikun.Api.Common.WiFiConnectionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.WiFiConnectionList;
  return proto.Yikun.Api.Common.WiFiConnectionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.WiFiConnectionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.WiFiConnectionList}
 */
proto.Yikun.Api.Common.WiFiConnectionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Yikun.Api.Common.WiFiConnection;
      reader.readMessage(value,proto.Yikun.Api.Common.WiFiConnection.deserializeBinaryFromReader);
      msg.addConnections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.WiFiConnectionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.WiFiConnectionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.WiFiConnectionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.WiFiConnectionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Yikun.Api.Common.WiFiConnection.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WiFiConnection connections = 1;
 * @return {!Array<!proto.Yikun.Api.Common.WiFiConnection>}
 */
proto.Yikun.Api.Common.WiFiConnectionList.prototype.getConnectionsList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.WiFiConnection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.WiFiConnection, 1));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.WiFiConnection>} value
 * @return {!proto.Yikun.Api.Common.WiFiConnectionList} returns this
*/
proto.Yikun.Api.Common.WiFiConnectionList.prototype.setConnectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Yikun.Api.Common.WiFiConnection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.WiFiConnection}
 */
proto.Yikun.Api.Common.WiFiConnectionList.prototype.addConnections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Yikun.Api.Common.WiFiConnection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.WiFiConnectionList} returns this
 */
proto.Yikun.Api.Common.WiFiConnectionList.prototype.clearConnectionsList = function() {
  return this.setConnectionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Yikun.Api.Common.Lane.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.Lane.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.Lane.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.Lane} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Lane.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    frameId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.Yikun.Api.Common.Point2D.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.Lane}
 */
proto.Yikun.Api.Common.Lane.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.Lane;
  return proto.Yikun.Api.Common.Lane.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.Lane} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.Lane}
 */
proto.Yikun.Api.Common.Lane.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMapId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrameId(value);
      break;
    case 3:
      var value = new proto.Yikun.Api.Common.Point2D;
      reader.readMessage(value,proto.Yikun.Api.Common.Point2D.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.Lane.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.Lane.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.Lane} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.Lane.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFrameId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.Yikun.Api.Common.Point2D.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 map_id = 1;
 * @return {number}
 */
proto.Yikun.Api.Common.Lane.prototype.getMapId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.Lane} returns this
 */
proto.Yikun.Api.Common.Lane.prototype.setMapId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string frame_id = 2;
 * @return {string}
 */
proto.Yikun.Api.Common.Lane.prototype.getFrameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.Lane} returns this
 */
proto.Yikun.Api.Common.Lane.prototype.setFrameId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Point2D points = 3;
 * @return {!Array<!proto.Yikun.Api.Common.Point2D>}
 */
proto.Yikun.Api.Common.Lane.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.Yikun.Api.Common.Point2D>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Yikun.Api.Common.Point2D, 3));
};


/**
 * @param {!Array<!proto.Yikun.Api.Common.Point2D>} value
 * @return {!proto.Yikun.Api.Common.Lane} returns this
*/
proto.Yikun.Api.Common.Lane.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Yikun.Api.Common.Point2D=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Yikun.Api.Common.Point2D}
 */
proto.Yikun.Api.Common.Lane.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Yikun.Api.Common.Point2D, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Yikun.Api.Common.Lane} returns this
 */
proto.Yikun.Api.Common.Lane.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Yikun.Api.Common.RobotConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.Yikun.Api.Common.RobotConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Yikun.Api.Common.RobotConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.RobotConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueCheck: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    clearObstacleRetries: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxNavVel: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    result: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Yikun.Api.Common.RobotConfig}
 */
proto.Yikun.Api.Common.RobotConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Yikun.Api.Common.RobotConfig;
  return proto.Yikun.Api.Common.RobotConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Yikun.Api.Common.RobotConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Yikun.Api.Common.RobotConfig}
 */
proto.Yikun.Api.Common.RobotConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueCheck(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClearObstacleRetries(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxNavVel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Yikun.Api.Common.RobotConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Yikun.Api.Common.RobotConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Yikun.Api.Common.RobotConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Yikun.Api.Common.RobotConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueCheck();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getClearObstacleRetries();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMaxNavVel();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool value_check = 1;
 * @return {boolean}
 */
proto.Yikun.Api.Common.RobotConfig.prototype.getValueCheck = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Yikun.Api.Common.RobotConfig} returns this
 */
proto.Yikun.Api.Common.RobotConfig.prototype.setValueCheck = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 clear_obstacle_retries = 2;
 * @return {number}
 */
proto.Yikun.Api.Common.RobotConfig.prototype.getClearObstacleRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RobotConfig} returns this
 */
proto.Yikun.Api.Common.RobotConfig.prototype.setClearObstacleRetries = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double max_nav_vel = 3;
 * @return {number}
 */
proto.Yikun.Api.Common.RobotConfig.prototype.getMaxNavVel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Yikun.Api.Common.RobotConfig} returns this
 */
proto.Yikun.Api.Common.RobotConfig.prototype.setMaxNavVel = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string result = 4;
 * @return {string}
 */
proto.Yikun.Api.Common.RobotConfig.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Yikun.Api.Common.RobotConfig} returns this
 */
proto.Yikun.Api.Common.RobotConfig.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.Yikun.Api.Common.Priority = {
  ENPENDING: 0,
  IMMEDIATELY: 1
};

/**
 * @enum {number}
 */
proto.Yikun.Api.Common.StateEnum = {
  PENDING: 0,
  ACTIVE: 1,
  PREEMPTED: 2,
  SUCCEEDED: 3,
  ABORTED: 4,
  REJECTED: 5,
  PREEMPTING: 6,
  RECALLING: 7,
  RECALLED: 8,
  LOST: 9
};

/**
 * @enum {number}
 */
proto.Yikun.Api.Common.RobotStateEnum = {
  UNKNOWN: 0,
  SHUT_DOWN: 1,
  SLEEP: 2,
  IDLE: 3,
  REMOTE: 4,
  CHARGING: 5,
  MAPPING: 6,
  INTERACTION: 7,
  UPGRADE: 8,
  FOLLOW: 9,
  CALL_UP: 10,
  END_FOLLOW: 11,
  EMERGENCY_STOP: 12,
  SWITCH_MAP: 13,
  SWITCH_MAP_COMPLETE: 14,
  NAVIGATE_TO_CHARGE_STATION: 41,
  FINDING_CHARGE_STATION: 42,
  MOVE_TO_CHARGE_STATION: 43,
  IS_CHARGING: 44,
  CHARGE_ERROR: 45,
  PLANNING: 51,
  NAVIGATING: 52,
  NAVI_COMPLETE: 53,
  NAVI_ERROR: 54
};

/**
 * @enum {number}
 */
proto.Yikun.Api.Common.LevelEnum = {
  OK: 0,
  WARN: 1,
  ERROR: 2,
  STALE: 3
};

/**
 * @enum {number}
 */
proto.Yikun.Api.Common.SubMapEnum = {
  CENTER: 0,
  LEFT_UP: 1,
  LEFT_DOWN: 2,
  RIGHT_UP: 3,
  RIGHT_DOWN: 4
};

goog.object.extend(exports, proto.Yikun.Api.Common);
